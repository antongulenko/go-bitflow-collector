image: golang:1.9

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE: gitlab-registry.tubit.tu-berlin.de/bitflow/go-bitflow-collector

services:
- docker:dind

before_script:
  - mkdir -p /go/src/github.com/antongulenko/go-bitflow-collector
  - cp -r * /go/src/github.com/antongulenko/go-bitflow-collector/
  - cd /go/src/github.com/antongulenko/go-bitflow-collector
  - apt-get update 
  - apt-get install -qq libvirt-dev libpcap-dev

stages:
  - test
  - build

lint_test:
  stage: test
  script:
    - go get -u golang.org/x/lint/golint
    - golint $(go list ./... | grep -v /vendor/)
  # use this if you want builds to fail because of linting erros
  # - golint -set_exit_status $(go list ./... | grep -v /vendor/)

race_test:
  # see https://golang.org/doc/articles/race_detector.html
  stage: test
  script:
    - go test -race -short $(go list ./... | grep -v /vendor/)

unit_test:
  stage: test
  script:
    - go test -short $(go list ./... | grep -v /vendor/)

build:
  image: docker:stable
  stage: build
  # build only on master branch
  only:
    - master
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab-registry.tubit.tu-berlin.de
  script:
    - docker build . -t $CONTAINER_IMAGE:$CI_COMMIT_SHA -t $CONTAINER_IMAGE:latest
    - docker push $CONTAINER_IMAGE:$CI_COMMIT_SHA
    - docker push $CONTAINER_IMAGE:latest
